name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip release')"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Generate version
        id: version
        run: |
          # Get latest tag or default to v0.0.0
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          # Increment patch version for each push to main
          VERSION=$(echo $LATEST_TAG | sed 's/v//' | awk -F. '{$NF++; print $1"."$2"."$NF}')
          NEW_TAG="v$VERSION"

          echo "New version: $NEW_TAG"
          echo "version=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAP_GITHUB_TOKEN: ${{ secrets.TAP_GITHUB_TOKEN }}